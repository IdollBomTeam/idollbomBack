-- 테이블 삭제
DROP TABLE PARENT;
DROP TABLE CHILD;
DROP TABLE PARENT_POST;
DROP TABLE PARENT_COMMENT;
DROP TABLE PARENT_FILE;
DROP TABLE PARENT_REPORT;
DROP TABLE PARENT_NOTE;
DROP TABLE PRO;
DROP TABLE PRO_POST;
DROP TABLE PRO_COMMENT;
DROP TABLE PRO_FILE;
DROP TABLE PRO_REPORT;
DROP TABLE CLASS;
DROP TABLE CLASS_SAVE;
DROP TABLE REVIEW;
DROP TABLE IMG;
DROP TABLE RESERVATION;
DROP TABLE RESERVATION_DATE;
DROP TABLE RESERVATION_TIME;
DROP TABLE QUESTION;
DROP TABLE ANSWER;

-- 부모 테이블
CREATE TABLE PARENT(
	PARENT_NUMBER NUMBER PRIMARY KEY, 		
	PARENT_EMAIL VARCHAR2(100) NOT NULL,
	PARENT_PASSWORD VARCHAR2(100) NOT NULL,
	PARENT_NAME VARCHAR2(100) NOT NULL,
	PARENT_NICKNAME VARCHAR2(100),
	PARENT_PHONE_NUMBER VARCHAR2(100) NOT NULL,
	PARENT_ADDRESS VARCHAR2(100) NOT NULL,
	PARENT_PROFILE_IMAGE_URL VARCHAR2(100) NOT NULL,
	PARENT_REPORT_COUNT NUMBER
);

ALTER TABLE PARENT
    MODIFY (PARENT_PROFILE_IMAGE_URL VARCHAR2(200));

-- 아이 테이블
CREATE TABLE CHILD(
	CHILD_NUMBER NUMBER PRIMARY KEY,
	CHILD_NAME VARCHAR2(50) NOT NULL,
	CHILD_AGE NUMBER NOT NULL,
	CHILD_GENDER VARCHAR2(10) NOT NULL,
	CHILD_SPECIAL_ISSUES VARCHAR2(500) NOT NULL,
	PARENT_NUMBER NUMBER, 
	CONSTRAINT FK_PARENT_TO_CHILD FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER)
);

-- 부모 게시판 테이블
CREATE TABLE PARENT_POST(
	PARENT_POST_NUMBER NUMBER PRIMARY KEY,
	PARENT_POST_TITLE VARCHAR2(100) NOT NULL,
	PARENT_POST_CONTENT VARCHAR2(1000) NOT NULL,
	PARENT_POST_VIEWS NUMBER NOT NULL,
	PARENT_POST_REGISTER_DATE DATE NOT NULL,
	PARENT_POST_UPDATE_DATE DATE NOT NULL,
	PARENT_NUMBER NUMBER,
	CONSTRAINT FK_PARENT_TO_POST FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER)
);

-- 댓글 (부모) 테이블
CREATE TABLE PARENT_COMMENT(
	PARENT_COMMENT_NUMBER NUMBER PRIMARY KEY,
	PARENT_COMMENT_CONTENT VARCHAR2(1000) NOT NULL,
	PARENT_COMMENT_REGISTER_DATE DATE NOT NULL,
	PARENT_COMMENT_UPDATE_DATE DATE NOT NULL,
	PARENT_NUMBER NUMBER,
	PARENT_POST_NUMBER NUMBER,
	CONSTRAINT FK_PARENT_TO_COMMENT_NUMBER FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER),
	CONSTRAINT FK_PARENT_TO_COMMENT_POST FOREIGN KEY(PARENT_POST_NUMBER)
	REFERENCES PARENT_POST(PARENT_POST_NUMBER)
);

-- 첨부파일 (부모) 테이블
CREATE TABLE PARENT_FILE(
	PARENT_FILE_NUMBER NUMBER PRIMARY KEY,
	PARENT_FILE_NAME VARCHAR2(100) NOT NULL,
	PARENT_FILE_SIZE NUMBER NOT NULL,
	PARENT_FILE_UPLOAD_TIME DATE NOT NULL,
	PARENT_POST_NUMBER NUMBER,
	CONSTRAINT FK_PARNET_TO_FILE FOREIGN KEY(PARENT_POST_NUMBER)
	REFERENCES PARENT_POST(PARENT_POST_NUMBER)
);

-- 신고하기 ( 부모 ) 테이블
CREATE TABLE PARENT_REPORT(
	PARENT_REPORT_NUMBER NUMBER PRIMARY KEY,
	PARENT_REPORT_TYPE VARCHAR2(100) NOT NULL,
	PARENT_REPORT_CONTENT VARCHAR2(1000) NOT NULL,
	PARENT_REPORT_REGISTER_DATE DATE NOT NULL,
	PARENT_POST_NUMBER NUMBER,
	CONSTRAINT FK_PARENT_TO_REPORT FOREIGN KEY(PARENT_POST_NUMBER)
	REFERENCES PARENT_POST(PARENT_POST_NUMBER)
);

-- -- 쪽지 (부모) 테이블
CREATE TABLE PARENT_NOTE(
	PARENT_NOTE_NUMBER NUMBER PRIMARY KEY,
	PARENT_NOTE_CONTENT VARCHAR2(1000) NOT NULL,
	PARENT_NOTE_SEND_TIME DATE NOT NULL,
	PARENT_NOTE_ALARM_CHECK VARCHAR2(20) NOT NULL,
	PARENT_NUMBER NUMBER,
	PRO_NUMBER NUMBER,
	CONSTRAINT FK_PARENT_TO_NOTE FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER),
	CONSTRAINT FK_PRO_TO_NOTE FOREIGN KEY(PRO_NUMBER)
	REFERENCES PRO(PRO_NUMBER)
);

-- 전문가 테이블
CREATE TABLE PRO(
	PRO_NUMBER NUMBER PRIMARY KEY,
	PRO_EMAIL VARCHAR2(100) NOT NULL,
	PRO_PASSWORD VARCHAR2(100) NOT NULL,
	PRO_NAME VARCHAR2(100) NOT NULL,
	PRO_NICKNAME VARCHAR2(100),
	PRO_PHONE_NUMBER VARCHAR2(100) NOT NULL,
	PRO_ADDRESS VARCHAR2(300) NOT NULL,
	PARENT_PROFILE_IMAGE_URL VARCHAR2(500) NOT NULL,
	PRO_FILE VARCHAR2(500) NOT NULL,
	PRO_INTRO VARCHAR2(1000) NOT NULL
);

-- 전문가 게시판 테이블
CREATE TABLE PRO_POST(
	PRO_POST_NUMBER NUMBER PRIMARY KEY,
	PRO_POST_TITLE VARCHAR2(100) NOT NULL,
	PRO_POST_CONTENT VARCHAR2(1000) NOT NULL,
	PRO_POST_VIEWS NUMBER NOT NULL,
	PRO_POST_REGISTER_DATE DATE NOT NULL,
	PRO_POST_UPDATE_DATE DATE NOT NULL,
	PRO_NUMBER NUMBER,
	CONSTRAINT FK_PRO_TO_POST FOREIGN KEY(PRO_NUMBER)
	REFERENCES PRO(PRO_NUMBER)
);

-- 댓글 ( 전문가 ) 테이블
CREATE TABLE PRO_COMMENT(
	PRO_COMMENT_NUMBER NUMBER PRIMARY KEY,
	PRO_COMMENT_CONTENT VARCHAR2(1000) NOT NULL,
	PRO_COMMENT_REGISTER_DATE DATE NOT NULL,
	PRO_COMMENT_UPDATE_DATE DATE NOT NULL,
	PRO_POST_NUMBER NUMBER,
	PRO_NUMBER NUMBER,
	CONSTRAINT FK_PRO_TO_COMMENT_NUMBER FOREIGN KEY(PRO_POST_NUMBER)
	REFERENCES PRO_POST(PRO_POST_NUMBER),
	CONSTRAINT FK_PRO_TO_COMMENT_POST FOREIGN KEY(PRO_NUMBER)
	REFERENCES PRO(PRO_NUMBER)
);

-- 첨부파일 ( 전문가 ) 테이블
CREATE TABLE PRO_FILE(
	PRO_FILE_NUMBER NUMBER PRIMARY KEY,
	PRO_FILE_NAME VARCHAR2(100) NOT NULL,
	PRO_FILE_URL VARCHAR2(500) NOT NULL,
	PRO_FILE_SIZE NUMBER NOT NULL,
	PRO_FILE_UPLOAD_TIME DATE NOT NULL,
	PRO_POST_NUMBER NUMBER,
	CONSTRAINT FK_PRO_TO_FILE FOREIGN KEY(PRO_POST_NUMBER)
	REFERENCES PRO_POST(PRO_POST_NUMBER)
);

-- 신고하기 ( 전문가 ) 테이블
CREATE TABLE PRO_REPORT(
	PRO_REPORT_NUMBER NUMBER PRIMARY KEY,
	PRO_REPORT_TYPE VARCHAR2(200) NOT NULL,
	PRO_REPORT_CONTENT VARCHAR2(1000) NOT NULL,
	PRO_REPORT_REGISTER_DATE DATE NOT NULL,
	PRO_POST_NUMBER NUMBER,
	CONSTRAINT FK_PRO_TO_REPORT FOREIGN KEY(PRO_POST_NUMBER)
	REFERENCES PRO_POST(PRO_POST_NUMBER)
);

-- 수업 테이블
CREATE TABLE CLASS(
	CLASS_NUMBER NUMBER PRIMARY KEY,
	CLASS_NAME VARCHAR2(100) NOT NULL,
	CLASS_CATEGORY_BIG VARCHAR2(30) NOT NULL,
	CLASS_CATEGORY_SMALL VARCHAR2(100) NOT NULL, 
	CLASS_CONTENT VARCHAR2(1000) NOT NULL,
	CLASS_PAYMENT_ACCOUNT NUMBER NOT NULL,
	PRO_NUMBER NUMBER,
	CONSTRAINT FK_PRO_TO_CLASS FOREIGN KEY(PRO_NUMBER)
	REFERENCES PRO(PRO_NUMBER)
);

-- 수업 찜 테이블
CREATE TABLE CLASS_SAVE(
	CLASS_NUMBER NUMBER,
	PARENT_NUMBER NUMBER,
	CONSTRAINT FK_CLASS_TO_SAVE FOREIGN KEY(CLASS_NUMBER)
	REFERENCES CLASS(CLASS_NUMBER),
	CONSTRAINT FK_PARENT_TO_SAVE FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER)
);

-- 리뷰 테이블 
CREATE TABLE REVIEW(
    REVIEW_NUMBER NUMBER PRIMARY KEY,
    REVIEW_CONTENT VARCHAR2(1000) NOT NULL,
    REVIEW_EVALUATION_POINT NUMBER NOT NULL,
    REVIEW_REGISTER_DATE DATE NOT NULL,
    REVIEW_UPDATE_DATE DATE NOT NULL,
    PARENT_NUMBER NUMBER,
    CLASS_NUMBER NUMBER,
    CONSTRAINT FK_PARENT_TO_REVIEW FOREIGN KEY(PARENT_NUMBER)
    REFERENCES PARENT(PARENT_NUMBER),
    CONSTRAINT FK_CLASS_TO_REVIEW FOREIGN KEY(CLASS_NUMBER)
    REFERENCES CLASS(CLASS_NUMBER)
);


-- 이미지 테이블
CREATE TABLE IMG(
	IMAGE_NUMBER NUMBER PRIMARY KEY,
	IMAGE_FILE_URL VARCHAR2(500) NOT NULL,
	CLASS_NUMBER NUMBER,
	CONSTRAINT FK_CLASS_TO_IMG FOREIGN KEY(CLASS_NUMBER)
	REFERENCES CLASS(CLASS_NUMBER)
);

-- 예약 날짜 테이블 
CREATE TABLE RESERVATION_DATE(
	RESERVATION_DATE_NUMBER NUMBER PRIMARY KEY,
	RESERVATION_DATE DATE NOT NULL,
	CLASS_NUMBER NUMBER,
	CONSTRAINT FK_CLASS_TO_RESERVATION_DATE FOREIGN KEY(CLASS_NUMBER)
	REFERENCES CLASS(CLASS_NUMBER)
);

-- 예약 시간 테이블
CREATE TABLE RESERVATION_TIME(
	RESERVATION_TIME_NUMBER NUMBER PRIMARY KEY,
	RESERVATION_TIME DATE NOT NULL,
	RESERVATION_DATE_NUMBER NUMBER,
	CONSTRAINT FK_DATE_TO_TIME FOREIGN KEY(RESERVATION_DATE_NUMBER)
	REFERENCES RESERVATION_DATE(RESERVATION_DATE_NUMBER)
);

-- 예약 내역 (결제 내역) 테이블
CREATE TABLE RESERVATION(
	RESERVATION_DATE_NUMBER NUMBER,
	RESERVATION_TIME_NUMBER NUMBER,
	PARENT_NUMBER NUMBER,
	CHILD_NUMBER NUMBER,
	CONSTRAINT FK_DATE_TO_RESERVATION FOREIGN KEY(RESERVATION_DATE_NUMBER)
	REFERENCES RESERVATION_DATE(RESERVATION_DATE_NUMBER),
	CONSTRAINT FK_TIME_TO_RESERVATION FOREIGN KEY(RESERVATION_TIME_NUMBER)
	REFERENCES RESERVATION_TIME(RESERVATION_TIME_NUMBER),
	CONSTRAINT FK_PARENT_TO_RESERVATION FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER),
	CONSTRAINT FK_CHILD_TO_RESERVATION FOREIGN KEY(CHILD_NUMBER)
	REFERENCES CHILD(CHILD_NUMBER)
);

-- 문의하기 테이블
CREATE TABLE QUESTION(
	QUESTION_NUMBER NUMBER PRIMARY KEY,
	QUESTION_TITLE VARCHAR2(100) NOT NULL,
	QUESTION_CONTENT VARCHAR2(1000) NOT NULL,
	QUESTION_REGISTER_DATE DATE NOT NULL,
	QUESTION_READING_CHECK VARCHAR2(50) NOT NULL,
	QUESTION_STATUS VARCHAR2(50) NOT NULL,
	PARENT_NUMBER NUMBER,
	CONSTRAINT FK_PARENT_TO_QUESTION FOREIGN KEY(PARENT_NUMBER)
	REFERENCES PARENT(PARENT_NUMBER)
);

-- 문의 답변하기 테이블
CREATE TABLE ANSWER (
	ANSWER_NUMBER NUMBER PRIMARY KEY,
	ANSWER_CONTENT VARCHAR2(1000) NOT NULL,
	QUESTION_NUMBER NUMBER,
	CONSTRAINT FK_QUESTION_TO_ANSWER FOREIGN KEY(QUESTION_NUMBER)
	REFERENCES QUESTION(QUESTION_NUMBER)
);

-- 시퀀스 생성
CREATE SEQUENCE SEQ_PROJECT
START WITH 1
INCREMENT BY 1
NOCACHE;

-- 시퀀스 삭제
DROP SEQUENCE SEQ_PROJECT;



-- 테이블 조회
SELECT * FROM PARENT;
SELECT * FROM CHILD;
SELECT * FROM PARENT_POST;
SELECT * FROM PARENT_COMMENT;
SELECT * FROM PARENT_FILE;
SELECT * FROM PARENT_REPORT;
SELECT * FROM PARENT_NOTE;
SELECT * FROM PRO;
SELECT * FROM PRO_POST;
SELECT * FROM PRO_COMMENT;
SELECT * FROM PRO_FILE;
SELECT * FROM PRO_REPORT;
SELECT * FROM CLASS;
SELECT * FROM CLASS_SAVE;
SELECT * FROM REVIEW;
SELECT * FROM IMG;
SELECT * FROM RESERVATION;
SELECT * FROM RESERVATION_DATE;
SELECT * FROM RESERVATION_TIME;
SELECT * FROM QUESTION;
SELECT * FROM ANSWER;

-- 모든 테이블 INSERT 쿼리문
INSERT INTO PARENT
(PARENT_NUMBER, PARENT_EMAIL, PARENT_PASSWORD, PARENT_NAME, PARENT_NICKNAME, PARENT_PHONE_NUMBER, PARENT_ADDRESS, PARENT_PROFILE_IMAGE_URL, PARENT_REPORT_COUNT)
VALUES(0, '', '', '', '', '', '', '', 0);

INSERT INTO CHILD
(CHILD_NUMBER, CHILD_NAME, CHILD_AGE, CHILD_GENDER, CHILD_SPECIAL_ISSUES, PARENT_NUMBER)
VALUES(0, '', 0, '', '', 0);

INSERT INTO PARENT_POST
(PARENT_POST_NUMBER, PARENT_POST_TITLE, PARENT_POST_CONTENT, PARENT_POST_VIEWS, PARENT_POST_REGISTER_DATE, PARENT_POST_UPDATE_DATE, PARENT_NUMBER)
VALUES(0, '', '', 0, '', '', 0);

INSERT INTO PARENT_COMMENT
(PARENT_COMMENT_NUMBER, PARENT_COMMENT_CONTENT, PARENT_COMMENT_REGISTER_DATE, PARENT_COMMENT_UPDATE_DATE, PARENT_NUMBER, PARENT_POST_NUMBER)
VALUES(0, '', '', '', 0, 0);

INSERT INTO PARENT_FILE
(PARENT_FILE_NUMBER, PARENT_FILE_NAME, PARENT_FILE_SIZE, PARENT_FILE_UPLOAD_TIME, PARENT_POST_NUMBER)
VALUES(0, '', 0, '', 0);

INSERT INTO PARENT_REPORT
(PARENT_REPORT_NUMBER, PARENT_REPORT_TYPE, PARENT_REPORT_CONTENT, PARENT_REPORT_REGISTER_DATE, PARENT_POST_NUMBER)
VALUES(0, '', '', '', 0);

INSERT INTO PARENT_NOTE
(PARENT_NOTE_NUMBER, PARENT_NOTE_CONTENT, PARENT_NOTE_SEND_TIME, PARENT_NOTE_ALARM_CHECK, PARENT_NUMBER, PRO_NUMBER)
VALUES(0, '', '', '', 0, 0);

INSERT INTO PRO
(PRO_NUMBER, PRO_EMAIL, PRO_PASSWORD, PRO_NAME, PRO_NICKNAME, PRO_PHONE_NUMBER, PRO_ADDRESS, PARENT_PROFILE_IMAGE_URL, PRO_FILE, PRO_INTRO)
VALUES(0, '', '', '', '', '', '', '', '', '');

INSERT INTO PRO_POST
(PRO_POST_NUMBER, PRO_POST_TITLE, PRO_POST_CONTENT, PRO_POST_VIEWS, PRO_POST_REGISTER_DATE, PRO_POST_UPDATE_DATE, PRO_NUMBER)
VALUES(0, '', '', 0, '', '', 0);

INSERT INTO PRO_COMMENT
(PRO_COMMENT_NUMBER, PRO_COMMENT_CONTENT, PRO_COMMENT_REGISTER_DATE, PRO_COMMENT_UPDATE_DATE, PRO_POST_NUMBER, PRO_NUMBER)
VALUES(0, '', '', '', 0, 0);

INSERT INTO PRO_FILE
(PRO_FILE_NUMBER, PRO_FILE_NAME, PRO_FILE_URL, PRO_FILE_SIZE, PRO_FILE_UPLOAD_TIME, PRO_POST_NUMBER)
VALUES(0, '', '', 0, '', 0);

INSERT INTO PRO_REPORT
(PRO_REPORT_NUMBER, PRO_REPORT_TYPE, PRO_REPORT_CONTENT, PRO_REPORT_REGISTER_DATE, PRO_POST_NUMBER)
VALUES(0, '', '', '', 0);

INSERT INTO CLASS
(CLASS_NUMBER, CLASS_NAME, CLASS_CATEGORY_BIG, CLASS_CATEGORY_SMALL, CLASS_CONTENT, CLASS_PAYMENT_ACCOUNT, PRO_NUMBER)
VALUES(0, '', '', '', '', 0, 0);

INSERT INTO CLASS_SAVE
(CLASS_NUMBER, PARENT_NUMBER)
VALUES(0, 0);

INSERT INTO REVIEW
(REVIEW_NUMBER, REVIEW_CONTENT, REVIEW_EVALUTION_POINT, REVIEW_REGISTER_DATE, REVIEW_UPDATE_DATE, PARENT_NUMBER, CLASS_NUMBER)
VALUES(0, '', 0, '', '', 0, 0);

INSERT INTO IMG
(IMAGE_NUMBER, IMAGE_FILE_URL, CLASS_NUMBER)
VALUES(0, '', 0);

INSERT INTO RESERVATION
(RESERVATION_DATE_NUMBER, RESERVATION_TIME_NUMBER, PARENT_NUMBER, CHILD_NUMBER)
VALUES(0, 0, 0, 0);

INSERT INTO RESERVATION_DATE
(RESERVATION_DATE_NUMBER, RESERVATION_DATE, CLASS_NUMBER)
VALUES(0, '', 0);

INSERT INTO RESERVATION_TIME
(RESERVATION_TIME_NUMBER, RESERVATION_TIME, RESERVATION_DATE_NUMBER)
VALUES(0, '', 0);

INSERT INTO QUESTION
(QUESTION_NUMBER, QUESTION_TITLE, QUESTION_CONTENT, QUESTION_REGISTER_DATE, QUESTION_READING_CHECK, QUESTION_STATUS, PARENT_NUMBER)
VALUES(0, '', '', '', '', '', 0);

INSERT INTO ANSWER
(ANSWER_NUMBER, ANSWER_CONTENT, QUESTION_NUMBER)
VALUES(0, '', 0);

SELECT * FROM USER_SEQUENCES;
























