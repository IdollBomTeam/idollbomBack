<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.idollbom.mapper.mainmapper.RecommendMapper">
    <!--  전문가 추천  -->
    <select id="recommend">
        select *
        from (select rownum as rn, recom.*
            from (SELECT
                        p.pro_profile_image_url, -- 전문가 이미지
                        p.pro_name, -- 전문가 이름
                        COALESCE(AVG(r.review_evaluation_point), 0) AS averageRating, -- 평균 평점, NULL 값은 0으로 대체
                        COUNT(r.review_number) AS reviewCount -- 리뷰 개수
                    FROM
                        pro p -- 전문가 테이블
                        JOIN
                        class c -- 클래스 테이블
                        ON p.pro_number = c.pro_number -- 리뷰 테이블을 전문가 테이블과 JOIN
                        join review r -- 리뷰 테이블
                        on c.class_number = r.class_number -- 전문가 테이블과 수업테이블 join
                    GROUP BY
                        p.pro_name, -- 전문가 이름으로 그룹화
                        p.pro_profile_image_url -- 전문가 이미지 URL로 그룹화
                    ORDER BY
                        averageRating DESC) recom -- 평균 평점이 높은 순으로 정렬
            --             reviewCount DESC; -- 리뷰 개수가 많은 순으로 정렬
            WHERE ROWNUM &lt;= #{endRow}
            )
        WHERE rn &gt; #{startRow}
    </select>

<!--  전문가 총 수  -->
    <select id="getCount">
        select count(*)
        from (SELECT
                  p.pro_profile_image_url, -- 전문가 이미지
                  p.pro_name, -- 전문가 이름
                  COALESCE(AVG(r.review_evaluation_point), 0) AS averageRating, -- 평균 평점, NULL 값은 0으로 대체
                  COUNT(r.review_number) AS reviewCount -- 리뷰 개수
              FROM
                  pro p -- 전문가 테이블
                      JOIN
                  class c -- 클래스 테이블
                  ON p.pro_number = c.pro_number -- 리뷰 테이블을 전문가 테이블과 JOIN
                      join review r -- 리뷰 테이블
                           on c.class_number = r.class_number -- 전문가 테이블과 수업테이블 join
              GROUP BY
                  p.pro_name, -- 전문가 이름으로 그룹화
                  p.pro_profile_image_url -- 전문가 이미지 URL로 그룹화
              ORDER BY
                  averageRating DESC)
    </select>

</mapper>